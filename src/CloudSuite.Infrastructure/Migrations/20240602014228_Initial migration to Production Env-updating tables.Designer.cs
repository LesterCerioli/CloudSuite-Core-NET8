// <auto-generated />
using System;
using CloudSuite.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CloudSuite.Infrastructure.Migrations
{
    [DbContext(typeof(CoreDbContext))]
    [Migration("20240602014228_Initial migration to Production Env-updating tables")]
    partial class InitialmigrationtoProductionEnvupdatingtables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CloudSuite.Domain.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)")
                        .HasColumnName("address_line");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contact_name");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("DistrictId");

                    b.ToTable("Addresses", (string)null);
                });

            modelBuilder.Entity("CloudSuite.Domain.Models.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CityName");

                    b.Property<Guid?>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("StateId");

                    b.ToTable("Cities", (string)null);
                });

            modelBuilder.Entity("CloudSuite.Domain.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("FantasyName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("fantasy_name");

                    b.Property<string>("RegisterName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("register_name");

                    b.HasKey("Id");

                    b.ToTable("Companies", (string)null);
                });

            modelBuilder.Entity("CloudSuite.Domain.Models.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Code3")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)")
                        .HasColumnName("Code");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("country_name");

                    b.Property<bool>("IsBillingEnabled")
                        .HasColumnType("bit")
                        .HasColumnName("IsBillingEnabled");

                    b.Property<bool>("IsCityEnabled")
                        .HasColumnType("bit")
                        .HasColumnName("IsCityEnabled");

                    b.Property<bool>("IsDistrictEnabled")
                        .HasColumnType("bit")
                        .HasColumnName("IsDistrictEnabled");

                    b.Property<bool>("IsShippingEnabled")
                        .HasColumnType("bit")
                        .HasColumnName("IsShippingEnabled");

                    b.Property<bool>("IsZipCodeEnabled")
                        .HasColumnType("bit")
                        .HasColumnName("IsZipCodeEnabled");

                    b.HasKey("Id");

                    b.ToTable("Coumtries", (string)null);
                });

            modelBuilder.Entity("CloudSuite.Domain.Models.District", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CityId");

                    b.ToTable("Districts", (string)null);
                });

            modelBuilder.Entity("CloudSuite.Domain.Models.Media", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Caption");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("FileName");

                    b.Property<int?>("FileSize")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("FileSize");

                    b.Property<int>("MediaType")
                        .HasColumnType("int")
                        .HasColumnName("MediaType");

                    b.HasKey("Id");

                    b.ToTable("Medias", (string)null);
                });

            modelBuilder.Entity("CloudSuite.Domain.Models.State", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("StateName");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("UF");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("States", (string)null);
                });

            modelBuilder.Entity("CloudSuite.Domain.Models.Address", b =>
                {
                    b.HasOne("CloudSuite.Domain.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CloudSuite.Domain.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("District");
                });

            modelBuilder.Entity("CloudSuite.Domain.Models.City", b =>
                {
                    b.HasOne("CloudSuite.Domain.Models.Address", null)
                        .WithMany("Cities")
                        .HasForeignKey("AddressId");

                    b.HasOne("CloudSuite.Domain.Models.District", null)
                        .WithMany("Cities")
                        .HasForeignKey("DistrictId");

                    b.HasOne("CloudSuite.Domain.Models.State", "State")
                        .WithMany("Cities")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("CloudSuite.Domain.Models.Company", b =>
                {
                    b.OwnsOne("CloudSuite.Domain.ValueObjects.Cnpj", "Cnpj", b1 =>
                        {
                            b1.Property<Guid>("CompanyId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CnpjNumber")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("nvarchar(11)")
                                .HasColumnName("cnpj_number");

                            b1.HasKey("CompanyId");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");
                        });

                    b.Navigation("Cnpj")
                        .IsRequired();
                });

            modelBuilder.Entity("CloudSuite.Domain.Models.District", b =>
                {
                    b.HasOne("CloudSuite.Domain.Models.Address", null)
                        .WithMany("Districts")
                        .HasForeignKey("AddressId");

                    b.HasOne("CloudSuite.Domain.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("CloudSuite.Domain.Models.State", b =>
                {
                    b.HasOne("CloudSuite.Domain.Models.City", null)
                        .WithMany("States")
                        .HasForeignKey("CityId");

                    b.HasOne("CloudSuite.Domain.Models.Country", "Country")
                        .WithMany("States")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("CloudSuite.Domain.Models.Address", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("Districts");
                });

            modelBuilder.Entity("CloudSuite.Domain.Models.City", b =>
                {
                    b.Navigation("States");
                });

            modelBuilder.Entity("CloudSuite.Domain.Models.Country", b =>
                {
                    b.Navigation("States");
                });

            modelBuilder.Entity("CloudSuite.Domain.Models.District", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("CloudSuite.Domain.Models.State", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
