trigger:
  branches:
    exclude:
      - '*'

pr:
  branches:
    include:
      - develop

jobs:
- job: PR_Semantic_Commit_Check
  displayName: 'Check Semantic Commit Messages'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - checkout: self
  - script: |
      # Fetch the PR's commits
      git fetch origin refs/pull/$(Build.PullRequestId)/merge

      # Extract commit messages
      commit_messages=$(git log --format=%s refs/pull/$(Build.PullRequestId)/merge)

      # Check each commit message against the semantic commit format
      invalid_messages=0
      for message in $commit_messages; do
        if [[ ! $message =~ ^((feat|fix|docs|style|refactor|perf|test|chore)(\([^()]+\))?: .{1,})(\n|$) ]]; then
          echo "Invalid semantic commit message format: $message"
          echo "Commit message format should be: '<type>(<scope>): <description>'"
          echo "Please fix the commit message and try again."
          ((invalid_messages++))
        fi
      done

      # Fail the job if any invalid messages are found
      if [ $invalid_messages -gt 0 ]; then
        exit 1
      fi
    displayName: 'Check Semantic Commit Messages'
